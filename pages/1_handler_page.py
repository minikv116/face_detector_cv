# ---
# page_title: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ_"
# page_icon: "üìπ"
# layout: wide
# ---

import os
import tempfile
import streamlit as st
from video_handler import process_video_one_cell, convert_video
import results_display

# ===================== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ =====================
st.set_page_config(page_title="–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ", layout="wide")
st.title("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ")

# ===================== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ –Ω–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ =====================
face_conf_threshold = st.sidebar.slider(
    label='–ü–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –ª–∏—Ü',
    min_value=0.0,
    max_value=1.0,
    value=0.7,
    step=0.01,
)
align = False
#align = st.sidebar.checkbox(label='Align', value=False)

# ===================== –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º =====================
st.subheader("–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ")
st_video = st.file_uploader(label='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏', type=["mp4", "avi", "mov"])

# –ó–∞–¥–∞—ë–º —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —Ü–µ–Ω—Ç—Ä–æ–≤–∫–∏ –≤–∏–¥–µ–æ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ main_page.py)
video_width = 60
video_side = 100

if st_video:
    if st.button('–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ'):
        with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ..."):
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            temp_file = tempfile.NamedTemporaryFile(delete=False)
            temp_file.write(st_video.read())
            video_file = temp_file.name
            
            # ===================== –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏ –≤ results_folder =====================
            base_results_folder = "results_folder"
            os.makedirs(base_results_folder, exist_ok=True)
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–ø–æ–∫ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
            existing = [int(d) for d in os.listdir(base_results_folder) if d.isdigit()]
            next_num = max(existing) + 1 if existing else 1
            new_folder = os.path.join(base_results_folder, str(next_num))
            os.makedirs(new_folder, exist_ok=True)
            
            # –ó–∞–¥–∞—ë–º –ø—É—Ç–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ, —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ, CSV –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ª–∏—Ü
            output_video_path = os.path.join(new_folder, "result_video.mp4")
            convert_video_path = os.path.join(new_folder, "result_video_convert.mp4")
            csv_output_path = os.path.join(new_folder, "video_results.csv")
            faces_dir = os.path.join(new_folder, "faces")
            os.makedirs(faces_dir, exist_ok=True)
            
            # ===================== –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ö–æ–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ =====================
            progress_bar = st.progress(0)
            progress_text = st.empty()
            
            def update_progress(current, total):
                """
                –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ.
                
                –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
                  current (int): —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∫–∞–¥—Ä–∞.
                  total (int): –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤.
                """
                progress = current / total
                progress_bar.progress(progress)
                progress_text.text(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–¥—Ä–∞ {current} –∏–∑ {total}")
            
            # –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º CSV –≤ –Ω–æ–≤–æ–π –ø–∞–ø–∫–µ
            tracked_faces = process_video_one_cell(
                video_path=video_file,
                faces_dir=faces_dir,
                output_video_path=output_video_path,
                face_conf_threshold=face_conf_threshold,
                align=align,
                progress_callback=update_progress,
                csv_output_path=csv_output_path
            )
        st.success("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        # ===================== –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∏–¥–µ–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ =====================
        with st.spinner('–ò–¥–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∏–¥–µ–æ ...'):
            convert_video(output_video_path, convert_video_path)
        
        with open(convert_video_path, 'rb') as file:
            video_bytes = file.read()
        
        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ")
        _, container, _ = st.columns([video_side, video_width, video_side])
        container.video(data=video_bytes)
        
        st.download_button(
            label='–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ',
            data=video_bytes,
            file_name=os.path.basename(convert_video_path)
        )
        
        # ===================== –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ =====================
        st.header("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        results_display.display_results(csv_path=csv_output_path)
